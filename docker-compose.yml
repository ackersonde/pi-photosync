version: '3.5'

# Docker Compose config file for PhotoPrism (Raspberry Pi 3/4 and other ARM64-based devices)
#
# Documentation : https://docs.photoprism.app/getting-started/raspberry-pi/
# Docker Hub URL: https://hub.docker.com/r/photoprism/photoprism/
#
# DOCKER COMPOSE COMMAND REFERENCE
# see https://docs.photoprism.app/getting-started/docker-compose/#command-line-interface
# --------------------------------------------------------------------------
# Start    | docker-compose up -d
# Stop     | docker-compose stop
# Update   | docker-compose pull
# Logs     | docker-compose logs --tail=25 -f
# Terminal | docker-compose exec photoprism bash
# Help     | docker-compose exec photoprism photoprism help
# Config   | docker-compose exec photoprism photoprism config
# Reset    | docker-compose exec photoprism photoprism reset
# Backup   | docker-compose exec photoprism photoprism backup -a -i
# Restore  | docker-compose exec photoprism photoprism restore -a -i
# Index    | docker-compose exec photoprism photoprism index
# Reindex  | docker-compose exec photoprism photoprism index -f
# Import   | docker-compose exec photoprism photoprism import
#
# To search originals for faces without a complete rescan:
# docker-compose exec photoprism photoprism faces index

services:
  ## App Server (required)
  photoprism:
    ## photoprism/photoprism-arm64 has been replaced by a single multi-arch image for AMD64 and ARM64 (64-bit).
    ## Use photoprism/photoprism:preview for testing preview builds or :latest for the stable release:
    image: photoprism/photoprism:latest
    container_name: photoprism
    depends_on:
      - mariadb
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "2342:2342" # HTTP port (host:container)
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: "insecure" # PLEASE CHANGE: Your initial admin password (min 4 characters)
      PHOTOPRISM_SITE_URL: "https://photos.ackerson.de/" # Public server URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: 5000 # File size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "none" # Improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_WORKERS: 2 # Limits the number of indexing workers to reduce system load
      PHOTOPRISM_DEBUG: "false" # Run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "true" # No authentication required (disables password protection)
      PHOTOPRISM_READONLY: "false" # Don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false" # Enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false" # Disables storage permission updates on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false" # Disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false" # Disables Settings in Web UI
      PHOTOPRISM_DISABLE_TENSORFLOW: "false" # Disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false" # Disables facial recognition
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false" # Disables image classification
      PHOTOPRISM_DARKTABLE_PRESETS: "true" # Enables Darktable presets and disables concurrent RAW conversion
      PHOTOPRISM_FFMPEG_ENCODER: "libx264" # FFmpeg AVC encoder for video transcoding (default: libx264)
      PHOTOPRISM_FFMPEG_BUFFERS: "64" # FFmpeg capture buffers (default: 32)
      PHOTOPRISM_DETECT_NSFW: "false" # Flag photos as private that MAY be offensive
      PHOTOPRISM_UPLOAD_NSFW: "true" # Allow uploads that MAY be offensive
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql" # Use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306" # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism" # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism" # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "insecure" # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_TITLE: "Ackerson Photos"
      PHOTOPRISM_SITE_CAPTION: "Bring the Ack Back"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: "Papa"
      ## Run as a specific user, group, or with a custom umask (does not work together with "user:")
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
      HOME: "/photoprism"
    ## Start as a non-root user (see https://docs.docker.com/engine/reference/run/#user)
    # user: "1000:1000"
    ## Hardware devices for video transcoding and machine learning (optional)
    devices:
      - "/dev/video10:/dev/video10" # Video4Linux
    working_dir: "/photoprism"
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      - "~/Pictures:/photoprism/originals" # original media files (photos and videos)
      - "~/syncthing/Camera/Camera:/photoprism/import" # pics from Pixel6 device
      - "./storage:/photoprism/storage" # *writable* storage folder for cache, database, and sidecar files (never remove)
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.photoprism.tls.certResolver=letsencrypt"
      - "traefik.http.routers.photoprism.tls.domains=photos.ackerson.de"
      - "traefik.http.routers.photoprism.rule=Host(`photos.ackerson.de`)"
      - "traefik.http.routers.photoprism.middlewares=http-ratelimit@file,secHeaders@file,api_auth"
      - "traefik.http.routers.photoprism.service=photoprism-svc"
      - "traefik.http.services.photoprism-svc.loadbalancer.server.port=2342"

  ## Empty container for publicly viewing photo albums (e.g. sharing w/ family)
  albumproxy:
    image: traefik/whoami
    container_name: albumproxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.public-album.entrypoints=web,secure"
      - "traefik.http.routers.public-album.tls.certResolver=letsencrypt"
      - "traefik.http.routers.public-album.tls.domains=albums.ackerson.de"
      - "traefik.http.routers.public-album.rule=Host(`albums.ackerson.de`) && (Path(`/favicon`) || Path(`/manifest.json`) || Path(`/api/v1/ws`) || Path(`/api/v1/photos`) || Path(`/api/v1/photos/view`) || Path(`/api/v1/session`) || PathPrefix(`/s`) || PathPrefix(`/api/v1/albums`) || PathPrefix(`/api/v1/t`))"
      - "traefik.http.routers.public-album.middlewares=http-ratelimit@file,secHeaders@file"
      - "traefik.http.routers.public-album.service=photoprism-svc"

  ## Database Server (recommended)
  ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  mariadb:
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    image: arm64v8/mariadb:10.7 # this mariadb image runs on ARM64-based devices only
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=128M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - "./database:/var/lib/mysql" # Important, don't remove
    environment:
      MYSQL_ROOT_PASSWORD: insecure
      MYSQL_DATABASE: photoprism
      MYSQL_USER: photoprism
      MYSQL_PASSWORD: insecure

  ## Syncthing Server
  syncthing:
    restart: unless-stopped
    image: syncthing/syncthing:latest
    container_name: syncthing
    volumes:
      - "/home/ubuntu/syncthing:/var/syncthing"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.syncthing.tls.certResolver=letsencrypt"
      - "traefik.http.routers.syncthing.tls.domains=homesync.ackerson.de"
      - "traefik.http.routers.syncthing.rule=Host(`homesync.ackerson.de`)"
      - "traefik.http.routers.syncthing.middlewares=http-ratelimit@file,secHeaders@file,api_auth"
      - "traefik.http.routers.syncthing.service=syncthing-svc"
      - "traefik.http.services.syncthing-svc.loadbalancer.server.port=8384"
    ports:
      - "8384:8384"
      - "22000:22000/tcp"
      - "22000:22000/udp"

  ## Traefik Server
  traefik:
    restart: unless-stopped
    image: traefik:2.8
    container_name: traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "~/traefik/logs:/var/log/traefik/"
      - "~/traefik/acme.json:/acme.json:ro"
      - "~/traefik/dynamic_conf.yml:/dynamic_conf.yml"
      - "~/traefik/usersFile:/usersFile"
    command:
      - "--api.dashboard=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--log.filepath=/var/log/traefik/traefik.log"
      - "--log.level=WARN"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file.filename=/dynamic_conf.yml"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.secure.address=:443"
      - "--certificatesResolvers.letsencrypt.acme.email=dan@ackerson.de"
      - "--certificatesResolvers.letsencrypt.acme.storage=acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.api_auth.basicauth.usersfile=/usersFile"
      - "traefik.http.routers.api.entrypoints=web,secure"
      - "traefik.http.routers.api.middlewares=http-ratelimit@file,secHeaders@file"
      - "traefik.http.routers.api.rule=Host(`ht.ackerson.de`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls.certResolver=letsencrypt"
      - "traefik.http.routers.api.tls.domains=ht.ackerson.de"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect@docker"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      - "traefik.http.middlewares.https-redirect.redirectscheme.port=443"
    ports:
      - "80:80"
      - "443:443"
