name: Deploy Traefik, Photoprism and Syncthing to PI

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-20.04
    env:

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - name: Build and deploy application
        run: |
          export CTX_DIGITALOCEAN_DROPLET_PROXY_TOKEN=$(echo ${{ secrets.ORG_DIGITALOCEAN_DROPLET_PROXY_TOKEN }} | base64 -d)
          export CTX_DIGITALOCEAN_FIREWALL=$(echo ${{ secrets.ORG_DIGITALOCEAN_FIREWALL }} | base64 -d)

          git clone https://github.com/ackersonde/digitaloceans.git
          cd digitaloceans
          go mod tidy
          go build do.go
          cd ../

          export SYNCTHING_CONFIG=$(echo ${{ secrets.ORG_HOME_SYNCTHING_CONFIG }} | base64 -d)
          export SYNCTHING_KEY=$(echo ${{ secrets.ORG_HOME_SYNCTHING_KEY }} | base64 -d)
          export SYNCTHING_CERT=$(echo ${{ secrets.ORG_HOME_SYNCTHING_CERT }} | base64 -d)
          export HTTP_USERSFILE=$(echo ${{ secrets.ORG_HOME_SYNCTHING_BASIC_AUTH_USERSFILE }} | base64 -d)
          envsubst '${SYNCTHING_CONFIG} ${SYNCTHING_KEY} ${SYNCTHING_CERT} ${HTTP_USERSFILE}' < setup_photosync.sh > install_photosync.sh

          export SSH_CXN=$(echo ${{ secrets.ORG_MASTER_HOST }} | base64 -d)
          cat <<DEPLOY_EOF >deploy-photosync.sh
          #!/usr/bin/bash
          scp -o StrictHostKeyChecking=no install_photosync.sh backup_photos.sh import_photos.sh docker-compose.yml ubuntu@$SSH_CXN:~/
          ssh ubuntu@$SSH_CXN '\
            curl -o traefik/dynamic_conf.yml https://raw.githubusercontent.com/ackersonde/digitaloceans/main/scripts/dynamic_conf.yml
            chmod a+x ./install_photosync.sh && sudo ./install_photosync.sh && \
            docker compose -f ./photoprism/docker-compose.yml down && \
            docker compose -f ./photoprism/docker-compose.yml pull && \
            docker compose -f ./photoprism/docker-compose.yml up -d
          '
          DEPLOY_EOF
          chmod u+x deploy-photosync.sh

          mkdir ~/.ssh
          cat <<EOF >~/.ssh/id_rsa
          $(echo ${{ secrets.ORG_DIGITALOCEAN_SSH_PRIVKEY }} | base64 -d)
          EOF
          chmod 400 ~/.ssh/id_rsa

          public_ip_address=$(curl -s https://checkip.amazonaws.com)
          ./digitaloceans/do -fn=firewallSSH -allow=true -ip=$public_ip_address -tag=traefik

          scp -o StrictHostKeyChecking=no deploy-photosync.sh install_photosync.sh backup_photos.sh import_photos.sh docker-compose.yml root@ackerson.de:~/
          ssh root@ackerson.de ./deploy-photosync.sh
          ssh root@ackerson.de rm -Rf deploy-photosync.sh install_photosync.sh backup_photos.sh import_photos.sh docker-compose.yml

          rm -Rf .ssh/ deploy-photosync.sh install_photosync.sh backup_photos.sh import_photos.sh docker-compose.yml
          ./digitaloceans/do -fn=firewallSSH -allow=false -ip=$public_ip_address

          export SLACK_NOTIFY_TOKEN=$(echo ${{ secrets.ORG_SLACK_NOTIFICATIONS_TOKEN }} | base64 -d)
          curl -s -o /dev/null -X POST -d token=$SLACK_NOTIFY_TOKEN -d channel=C092UE0H4 \
            -d text="<https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|$GITHUB_REPOSITORY @ $GITHUB_RUN_ID>" \
            https://slack.com/api/chat.postMessage
